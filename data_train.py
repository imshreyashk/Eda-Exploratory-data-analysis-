# -*- coding: utf-8 -*-
"""data_train.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oViqFfvV9m4pM9PXuhi2ajmQk6AsStJO
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

train_df = pd.read_excel('Data_Train.xlsx')
train_df.head(3)

train_df.shape

test_df = pd.read_excel('Test_set.xlsx')
test_df.head(3)

final_df = pd.concat([train_df, test_df])
final_df.head(3)

final_df.tail()

final_df['Date']= final_df['Date_of_Journey'].str.split('/').str[0]
final_df['Month']= final_df['Date_of_Journey'].str.split('/').str[1]
final_df['Year'] = final_df['Date_of_Journey'].str.split('/').str[2]

final_df.head(2)

#by lambda function
#df['Data'] = df['Date_of_Journey'].apply(lambda x:x.split('/')[0])
#df['Month'] = df['Data_of_Journey'].apply(lambda x:x.split('/')[1])
#df['Year'] = df['Data_of_Journey'].apply(lambda x:x.split('/')[2])

final_df['Date']=final_df['Date'].astype(int)
final_df['Month']=final_df['Month'].astype(int)
final_df['Year']=final_df['Year'].astype(int)

final_df.info()

final_df.drop('Date_of_Journey', axis=1, inplace=True)

final_df.head(2)

final_df['Arrival_Time']=final_df['Arrival_Time'].str.split(' ').str[0]

#final_df['Arrival_Time'].apply(lambda x:x.split(' ')[0])

final_df['Arrival_hour']=final_df['Arrival_Time'].str.split(':').str[0]
final_df['Arrival_min']=final_df['Arrival_Time'].str.split(':').str[1]

final_df.head(2)

final_df['Arrival_hour'] = final_df['Arrival_hour'].astype(int)
final_df['Arrival_min'] = final_df['Arrival_min'].astype(int)

final_df.drop('Arrival_Time', axis=1, inplace=True)

final_df.head(1)

final_df['Dep_Hour']=final_df['Dep_Time'].str.split(':').str[0]
final_df['Dep_min']=final_df['Dep_Time'].str.split(':').str[1]
final_df['Dep_Hour']=final_df['Dep_Hour'].astype(int)
final_df['Dep_min']=final_df['Dep_min'].astype(int)
final_df.drop('Dep_Time', axis=1, inplace=True)

final_df.info()

final_df.head(1)

final_df['Total_Stops'].unique()

final_df[final_df['Total_Stops'].isnull()]

final_df['Total_Stops'] =final_df['Total_Stops'].map({'non-stop':0, '1 stops' : 1, '2 stops' :2, '3 stops' :3, '4 stops':4, 'nan': 1})

final_df.head(1)

final_df.drop('Route', axis=1, inplace=True)

final_df.head(1)

final_df['Duration_hours']=final_df['Duration'].str.split(' ').str[0].str.split('h').str[0]

final_df[final_df['Duration_hours']== '5m']

final_df.drop(6474, axis=0, inplace=True)
final_df.drop(2660, axis=0, inplace=True)

final_df['Duration_hours'] = final_df['Duation_hours'].astype(int)

final_df['Duration_minutes'] = final_df['Duration'].str.split(' ').str[1].str.split('m').str[0]

final_df.head(2)

final_df.drop('Duration', axis=1, inplace=True)

final_df.head(2)

final_df['Airline'].unique()

from sklearn.preprocessing import LabelEncoder
labelencoder = LabelEncoder()

final_df['Airline'] = labelencoder.fit_transform(final_df['Airline'])
final_df['Source'] = labelencoder.fit_transform(final_df['Source'])
final_df['Destination'] = labelencoder.fit_transform(final_df['Destination'])
final_df['Additional_Info'] = labelencoder.fit_transform(final_df['Additional_Info'])

final_df.shape

final_df.head()

pd.get_dummies(final_df, columns=['Airline', 'Source', 'Destination', 'Additional_Info'], drop_first=True)

