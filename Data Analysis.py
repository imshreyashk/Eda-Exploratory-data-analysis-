# -*- coding: utf-8 -*-
"""eda2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kIy2GzV2F_sokwHTZ0Eth5SXTOW2i4TQ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('zomato.csv', encoding='Latin-1')
df.head(2)

df.info()

df.describe()

df.isnull().sum()

[features for features in df.columns if df[features].isnull().sum()> 1]

sns.heatmap(df.isnull(), yticklabels=False, cbar=False, cmap='rainbow')

df2 = pd.read_excel('Country-Code.xlsx')
df2

df.columns

final_datset = pd.merge(df, df2, on='Country Code', how='left')
final_datset.head(5)

final_datset.dtypes

country_names = final_datset.Country.value_counts().index
country_names

country_val= final_datset.Country.value_counts().values

#pie chart

plt.pie(country_val[:3], labels=country_names[:3], autopct='%1.2f%%')

final_datset.columns

rating = final_datset.groupby(['Aggregate rating','Rating color', 'Rating text']).size().reset_index().rename(columns={0: 'Rating count'})

rating.head()

import matplotlib
matplotlib.rcParams['figure.figsize'] = (12,6)
sns.barplot(x="Aggregate rating", y="Rating count", data=rating, hue="Rating color", palette=['black', 'red', 'orange', 'yellow', 'green', 'green'])

## Count plot
sns.countplot(x="Rating color", data=rating, palette=['black', 'red', 'orange', 'yellow', 'green', 'green'])

final_datset[final_datset['Rating color'] == 'White'].groupby('Country').size().reset_index().head(5)

final_datset[['Country', 'Currency']].groupby(['Country', 'Currency']).size().reset_index()

final_datset[final_datset['Has Online delivery'] == 'Yes'].Country.value_counts()

final_datset[['Has Online delivery', 'Country']].groupby(['Has Online delivery', 'Country']).size().reset_index()

final_datset.City.value_counts().index

city_values=final_datset.City.value_counts().values
city_labels=final_datset.City.value_counts().index

plt.pie(city_values[:5], labels=city_labels[:5], autopct='%1.2f%%')

final_datset.columns

cuisine_counts = final_datset['Cuisines'].value_counts()
filtered_cuisine_counts = cuisine_counts[cuisine_counts > 10]
top_10_filtered_cuisines = filtered_cuisine_counts.head(10)
final_result_df  = top_10_filtered_cuisines.reset_index()
final_result_df

matplotlib.rcParams['figure.figsize'] = (20,10)
sns.barplot(x='Cuisines', y='count', data=final_result_df, palette='viridis')

